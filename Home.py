import streamlit as st

from PIL import Image




def run():
    # favicon image
    im = Image.open("favicon.ico")

    st.set_page_config(
        page_title="Churn Predictor",
        page_icon=im,
    )

    st.write("# Welcome to Churn Predictor! üïµÔ∏è‚Äç‚ôÇÔ∏è")

    st.sidebar.success("Select a page above")

    st.markdown(
        """
        ### Overview
        Churn predictor is a machine learning tool to predict the users' churn based on __Recency, Frequency, Monetary__, and __Age__.
        By finding out this probability, we're able to do certain efforts to keep the users renew the subscription.
        **üëà Select a from the sidebar** to see further options
        ### Sources of Data
        The datasets is extracted from Tableau and then beaing trained and deployed using XGBoost classification algorithm.
        ### Type of Predictors
        
        - #### Bulk
        1. File Upload: The user selects the Excel (*.xlsx) file from their device and uploads it to the system.
        2. Data Validation: The system validates the data in the Excel (*.xlsx) file to ensure it is in the correct format and contains no errors. If any errors are found, the system alerts the user and provides instructions for correcting the issues.
        3. Data Processing: The validated data is processed and prepared for analysis. This may include removing irrelevant data, filling in missing values, or transforming the data into a more suitable format for analysis.
        4. Predictive Modeling: The processed data is then used to build a predictive model using statistical and machine learning algorithms.
        5. Prediction Generation: The predictive model generates predictions based on the data in the Excel (*.xlsx) file.
        6. Results Interpretation: The predictions are interpreted and analyzed to gain insights and make informed decisions. The results can also be visualized and shared with others to facilitate collaboration and decision-making.
        By enabling file upload, the system provides a user-friendly and efficient way for organizations to make predictions using their own data, without the need for manual data entry or complex data processing steps.
        
        - #### Single
        1. Input Data: The user inputs the Recency, Frequency, Monetary, and Age values for each customer. Recency refers to the time since the customer's last purchase, Frequency refers to the number of purchases made by the customer, Monetary refers to the amount of money spent by the customer, and Age refers to the customer's age.
        2. Data Processing: The input data is processed and transformed into a format suitable for analysis. This may include converting values into standardized units or removing any outliers or missing data.
        3. Predictive Modeling: The processed data is then used to build a predictive model that uses statistical and machine learning algorithms to analyze the data and make predictions. The model takes into account the relationships between the RFM and Age variables and the target variable being predicted.
        4. Prediction Generation: The predictive model generates predictions based on the input data, which can be used to make informed decisions and improve business processes.
        5. Results Interpretation: The predictions generated by the system are interpreted and analyzed to understand their implications and make informed decisions.
        By taking into account the Recency, Frequency, Monetary, and Age values, the system is able to generate highly accurate predictions that provide valuable insights into customer behavior and preferences. These insights can be used to drive targeted marketing campaigns, improve customer engagement, and optimize business operations.
        
    """
    )


if __name__ == "__main__":
    run()